/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–∏—Å–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
 */

import fs from 'fs';
import { fileURLToPath } from 'url';
import { dirname } from 'path';

// –ü—É—Ç–∏ –¥–ª—è ESM
const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const CONFIG = {
  pidFile: 'monitoring-service.pid',
  logFile: 'monitoring-service.log'
};

/**
 * –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
 */
function stopMonitoringService() {
  console.log(`üîç –ü–æ–∏—Å–∫ –∑–∞–ø—É—â–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...`);
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ PID —Ñ–∞–π–ª
    if (!fs.existsSync(CONFIG.pidFile)) {
      console.log(`‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω PID —Ñ–∞–π–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞. –í–æ–∑–º–æ–∂–Ω–æ, —Å–µ—Ä–≤–∏—Å –Ω–µ –∑–∞–ø—É—â–µ–Ω.`);
      return;
    }
    
    // –ß–∏—Ç–∞–µ–º PID –ø—Ä–æ—Ü–µ—Å—Å–∞
    const pid = parseInt(fs.readFileSync(CONFIG.pidFile, 'utf8').trim());
    console.log(`üîç –ù–∞–π–¥–µ–Ω PID —Å–µ—Ä–≤–∏—Å–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: ${pid}`);
    
    try {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å—É
      process.kill(pid, 'SIGTERM');
      console.log(`‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å—É ${pid}`);
      
      // –£–¥–∞–ª—è–µ–º PID —Ñ–∞–π–ª
      fs.unlinkSync(CONFIG.pidFile);
      console.log(`üóëÔ∏è PID —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω`);
      
      console.log(`‚úÖ –°–µ—Ä–≤–∏—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω`);
    } catch (e) {
      console.log(`‚ö†Ô∏è –ü—Ä–æ—Ü–µ—Å—Å —Å PID ${pid} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –£–¥–∞–ª—è–µ–º PID —Ñ–∞–π–ª.`);
      fs.unlinkSync(CONFIG.pidFile);
    }
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ —Å–µ—Ä–≤–∏—Å–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:`, error.message);
  }
}

// –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
stopMonitoringService();