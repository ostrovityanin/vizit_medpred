/**
 * –ó–∞–ø—É—Å–∫ —É–ª—É—á—à–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
 */
import { spawn } from 'child_process';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import { dirname } from 'path';
import dotenv from 'dotenv';

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è ESM
dotenv.config();
const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const CONFIG = {
  pidFile: 'enhanced-monitoring.pid',
  logFile: 'enhanced-monitoring.log',
  scriptPath: './services/enhanced-monitor.mjs'
};

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–ø—É—â–µ–Ω –ª–∏ —Å–µ—Ä–≤–∏—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
 * @returns {boolean} –ó–∞–ø—É—â–µ–Ω –ª–∏ —Å–µ—Ä–≤–∏—Å
 */
function isServiceRunning() {
  try {
    if (!fs.existsSync(CONFIG.pidFile)) {
      return false;
    }
    
    const pid = parseInt(fs.readFileSync(CONFIG.pidFile, 'utf8').trim());
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø—Ä–æ—Ü–µ—Å—Å
    try {
      process.kill(pid, 0);
      console.log(`‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω –∑–∞–ø—É—â–µ–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (PID: ${pid})`);
      return true;
    } catch (e) {
      console.log(`‚ö†Ô∏è PID-—Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ –ø—Ä–æ—Ü–µ—Å—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π PID-—Ñ–∞–π–ª...`);
      fs.unlinkSync(CONFIG.pidFile);
      return false;
    }
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞:`, error.message);
    return false;
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è Telegram
 */
function checkTelegramConfig() {
  const token = process.env.TELEGRAM_BOT_TOKEN;
  const chatId = process.env.TELEGRAM_CHAT_ID;
  
  if (!token) {
    console.warn(`‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω —Ç–æ–∫–µ–Ω TELEGRAM_BOT_TOKEN`);
  }
  
  if (!chatId) {
    console.warn(`‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω ID —á–∞—Ç–∞ TELEGRAM_CHAT_ID`);
  }
  
  if (!token || !chatId) {
    console.warn(`‚ö†Ô∏è –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram –Ω–µ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è!`);
    return false;
  }
  
  return true;
}

/**
 * –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
 */
async function startMonitoringService() {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ —É–∂–µ —Å–µ—Ä–≤–∏—Å
  if (isServiceRunning()) {
    console.log(`‚ùå –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —É–∂–µ –∑–∞–ø—É—â–µ–Ω. –î–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–Ω–∞—á–∞–ª–∞ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ç–µ–∫—É—â–∏–π –ø—Ä–æ—Ü–µ—Å—Å.`);
    process.exit(1);
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Telegram
  checkTelegramConfig();
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
  const scriptPath = path.resolve(CONFIG.scriptPath);
  try {
    if (!fs.existsSync(scriptPath)) {
      console.error(`‚ùå –°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: ${scriptPath}`);
      process.exit(1);
    }
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–∫—Ä–∏–ø—Ç–∞:`, error.message);
    process.exit(1);
  }
  
  console.log(`üöÄ –ó–∞–ø—É—Å–∫ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...`);
  console.log(`üìÑ –°–∫—Ä–∏–ø—Ç: ${scriptPath}`);
  
  try {
    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    const monitorProcess = spawn('node', [scriptPath], {
      detached: true,
      stdio: ['ignore', 
              fs.openSync(CONFIG.logFile, 'a'), 
              fs.openSync(CONFIG.logFile, 'a')]
    });
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º PID –ø—Ä–æ—Ü–µ—Å—Å–∞ –≤ —Ñ–∞–π–ª
    fs.writeFileSync(CONFIG.pidFile, `${monitorProcess.pid}`);
    
    console.log(`‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ (PID: ${monitorProcess.pid})`);
    console.log(`üìù –õ–æ–≥–∏ –±—É–¥—É—Ç –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –≤ ${CONFIG.logFile}`);
    
    // –û—Ç—Å–æ–µ–¥–∏–Ω—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å
    monitorProcess.unref();
    
    console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ. –°—Ç–∞—Ç—É—Å –±—É–¥–µ—Ç —Ä–µ–≥—É–ª—è—Ä–Ω–æ –≤—ã–≤–æ–¥–∏—Ç—å—Å—è –≤ –ª–æ–≥-—Ñ–∞–π–ª.');
    process.exit(0);
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:`, error.message);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞
startMonitoringService();