/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–µ—Ä–≤–µ—Ä–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
 * –í–µ—Ä—Å–∏—è 2.0 - –° —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –ø—Ä–æ–±–ª–µ–º –∑–∞–ø—É—Å–∫–∞
 */

import { spawn } from 'child_process';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import { dirname } from 'path';
import axios from 'axios';

// –ü—É—Ç–∏ –¥–ª—è ESM
const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const CONFIG = {
  pidFile: 'monitoring-service.pid',
  logFile: 'monitoring-service.log',
  scriptPath: './services/simple-monitor.mjs',
  serverHealthEndpoint: 'http://localhost:5000/health',
  maxStartAttempts: 3
};

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏ chat ID –¥–ª—è Telegram
const { TELEGRAM_BOT_TOKEN, TELEGRAM_CHAT_ID } = process.env;

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
 */
async function checkServerHealth() {
  try {
    const response = await axios.get(CONFIG.serverHealthEndpoint, { timeout: 3000 });
    return {
      healthy: response.data.status === 'ok',
      uptime: response.data.uptime,
      memory: response.data.memory
    };
  } catch (error) {
    return { healthy: false, error: error.message };
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–ø—É—â–µ–Ω –ª–∏ —Å–µ—Ä–≤–∏—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
 * @returns {boolean} –ó–∞–ø—É—â–µ–Ω –ª–∏ —Å–µ—Ä–≤–∏—Å
 */
function isServiceRunning() {
  try {
    if (fs.existsSync(CONFIG.pidFile)) {
      const pid = parseInt(fs.readFileSync(CONFIG.pidFile, 'utf8').trim());
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø—Ä–æ—Ü–µ—Å—Å
      try {
        process.kill(pid, 0);
        console.log(`‚úÖ –°–µ—Ä–≤–∏—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω (PID: ${pid})`);
        return true;
      } catch (e) {
        console.log(`‚ö†Ô∏è –ù–∞–π–¥–µ–Ω PID —Ñ–∞–π–ª, –Ω–æ –ø—Ä–æ—Ü–µ—Å—Å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π PID —Ñ–∞–π–ª.`);
        fs.unlinkSync(CONFIG.pidFile);
      }
    }
    return false;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:`, error.message);
    return false;
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è Telegram
 */
function checkTelegramConfig() {
  if (!TELEGRAM_BOT_TOKEN || !TELEGRAM_CHAT_ID) {
    console.log(`‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Telegram:`);
    console.log(`   TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN ? '–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
    console.log(`   TELEGRAM_CHAT_ID: ${TELEGRAM_CHAT_ID ? '–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
    console.log(`   –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ Telegram`);
    return false;
  }
  
  console.log(`‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Telegram –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞`);
  return true;
}

/**
 * –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
 */
async function startMonitoringService() {
  console.log(`üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ...`);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ —É–∂–µ —Å–µ—Ä–≤–∏—Å
  if (isServiceRunning()) {
    console.log(`‚ö†Ô∏è –°–µ—Ä–≤–∏—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω. –ù–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –Ω–µ –±—É–¥–µ—Ç –∑–∞–ø—É—â–µ–Ω.`);
    return;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Telegram
  checkTelegramConfig();
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
  console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞...`);
  const serverStatus = await checkServerHealth();
  
  if (serverStatus.healthy) {
    console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω`);
    console.log(`   - –ê–ø—Ç–∞–π–º: ${serverStatus.uptime} —Å–µ–∫`);
    if (serverStatus.memory) {
      console.log(`   - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: ${serverStatus.memory.heapUsed}/${serverStatus.memory.heapTotal}`);
    }
  } else {
    console.log(`‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (${serverStatus.error || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'})`);
    console.log(`   –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤—Å–µ —Ä–∞–≤–Ω–æ –±—É–¥–µ—Ç –∑–∞–ø—É—â–µ–Ω –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è`);
  }
  
  try {
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª–æ–≥-—Ñ–∞–π–ª
    fs.appendFileSync(CONFIG.logFile, `\n[${new Date().toISOString()}] –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (v2.0)\n`);
    fs.appendFileSync(CONFIG.logFile, `[${new Date().toISOString()}] Telegram config: token=${!!TELEGRAM_BOT_TOKEN}, chatId=${!!TELEGRAM_CHAT_ID}\n`);
    
    // –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∞–Ω–¥—É –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ –Ω–∞–ø—Ä—è–º—É—é
    const monitorProcess = spawn('node', [CONFIG.scriptPath], {
      detached: true,
      env: process.env,
      stdio: [
        'ignore',
        fs.openSync(CONFIG.logFile, 'a'),
        fs.openSync(CONFIG.logFile, 'a')
      ]
    });
    
    // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –ª–∏ –ø—Ä–æ—Ü–µ—Å—Å
    monitorProcess.on('error', (err) => {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:`, err.message);
      fs.appendFileSync(CONFIG.logFile, `[${new Date().toISOString()}] –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: ${err.message}\n`);
    });
    
    // –û—Ç—Å–æ–µ–¥–∏–Ω—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å –æ—Ç —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ, —á—Ç–æ–±—ã –æ–Ω —Ä–∞–±–æ—Ç–∞–ª –≤ —Ñ–æ–Ω–µ
    monitorProcess.unref();
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º PID –ø—Ä–æ—Ü–µ—Å—Å–∞
    fs.writeFileSync(CONFIG.pidFile, monitorProcess.pid.toString());
    
    console.log(`‚úÖ –°–µ—Ä–≤–∏—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ (PID: ${monitorProcess.pid})`);
    console.log(`üìä –õ–æ–≥–∏ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ —Ñ–∞–π–ª: ${CONFIG.logFile}`);
    console.log(`üì§ –û—Ç—á–µ—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –≤ Telegram: ${TELEGRAM_BOT_TOKEN && TELEGRAM_CHAT_ID ? '–î–∞' : '–ù–µ—Ç'}`);
    console.log(`üí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–∏—Å–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: node stop-monitoring-service.js`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É, –∑–∞–ø—É—â–µ–Ω –ª–∏ –ø—Ä–æ—Ü–µ—Å—Å
    setTimeout(() => {
      try {
        process.kill(monitorProcess.pid, 0);
        fs.appendFileSync(CONFIG.logFile, `[${new Date().toISOString()}] –ü—Ä–æ—Ü–µ—Å—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω (PID: ${monitorProcess.pid})\n`);
      } catch (e) {
        console.error(`‚ùå –ü—Ä–æ—Ü–µ—Å—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –∏–ª–∏ –±—ã–ª –ø—Ä–µ—Ä–≤–∞–Ω`);
        fs.appendFileSync(CONFIG.logFile, `[${new Date().toISOString()}] –ü—Ä–æ—Ü–µ—Å—Å –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è: ${e.message}\n`);
      }
    }, 1000);
    
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–∏—Å–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:`, error.message);
    fs.appendFileSync(CONFIG.logFile, `[${new Date().toISOString()}] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error.message}\n`);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
startMonitoringService();